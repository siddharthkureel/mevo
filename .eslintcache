[{"C:\\Users\\sidd\\Desktop\\mevo\\src\\index.js":"1","C:\\Users\\sidd\\Desktop\\mevo\\src\\App.js":"2","C:\\Users\\sidd\\Desktop\\mevo\\src\\components\\Navbar.js":"3","C:\\Users\\sidd\\Desktop\\mevo\\src\\pages\\Home.js":"4","C:\\Users\\sidd\\Desktop\\mevo\\src\\components\\Map.js":"5","C:\\Users\\sidd\\Desktop\\mevo\\src\\api\\index.js":"6"},{"size":361,"mtime":1612272661356,"results":"7","hashOfConfig":"8"},{"size":256,"mtime":1612425441259,"results":"9","hashOfConfig":"8"},{"size":759,"mtime":1612706526080,"results":"10","hashOfConfig":"8"},{"size":1409,"mtime":1612616264484,"results":"11","hashOfConfig":"8"},{"size":2044,"mtime":1612615282427,"results":"12","hashOfConfig":"8"},{"size":101,"mtime":1612426550492,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"yjig2b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sidd\\Desktop\\mevo\\src\\index.js",[],["28","29"],"C:\\Users\\sidd\\Desktop\\mevo\\src\\App.js",[],"C:\\Users\\sidd\\Desktop\\mevo\\src\\components\\Navbar.js",[],"C:\\Users\\sidd\\Desktop\\mevo\\src\\pages\\Home.js",["30","31","32"],"import React, { useLayoutEffect, useState } from 'react';\r\n\r\nimport http from '../api';\r\nimport Map from '../components/Map';\r\n\r\nconst Home = () => {\r\n\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [homeZones, setHomeZones] = useState([]);\r\n\r\n    useLayoutEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await http.get('/public/vehicles/all');\r\n            const result2 = await http.get('/public/home-zones/all');\r\n            setVehicles(vehicles.concat(result.data));\r\n            setHomeZones(homeZones.concat(result2.data));\r\n        }\r\n        fetchData()\r\n    }, []);\r\n    \r\n    const handleClosestCar = async () => {\r\n        const options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n        const success = async (pos) => {\r\n            const crd = pos.coords;\r\n        }\r\n        const error = (err) => {\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n        }\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n          \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <button onClick={handleAllVehicles} >Get all vehicles</button>\r\n            <button onClick={handleClosestCar} >find Closest Car</button> */}\r\n            <Map vehicles={vehicles} homeZones={homeZones} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\sidd\\Desktop\\mevo\\src\\components\\Map.js",[],"C:\\Users\\sidd\\Desktop\\mevo\\src\\api\\index.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":19,"column":8,"nodeType":"39","endLine":19,"endColumn":10,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":21,"column":11,"nodeType":"43","messageId":"44","endLine":21,"endColumn":27},{"ruleId":"41","severity":1,"message":"45","line":28,"column":19,"nodeType":"43","messageId":"44","endLine":28,"endColumn":22},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'homeZones' and 'vehicles'. Either include them or remove the dependency array. You can also do a functional update 'setVehicles(v => ...)' if you only need 'vehicles' in the 'setVehicles' call.","ArrayExpression",["48"],"no-unused-vars","'handleClosestCar' is assigned a value but never used.","Identifier","unusedVar","'crd' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [homeZones, vehicles]",{"range":"51","text":"52"},[621,623],"[homeZones, vehicles]"]